name: TAG Version

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write # üîì consente git push / tag

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üß∞ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üß± Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üê≥ Run Docker Compose
        run: docker compose up -d

      - name: üìÑ Get current version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "APP_VERSION=v$VERSION" >> $GITHUB_ENV
          echo "Detected version: v$VERSION"

      - name: üîñ Create Git tag if not exists
        run: |
          git fetch --tags
          if git rev-parse "$APP_VERSION" >/dev/null 2>&1; then
            echo "‚ÑπÔ∏è Tag $APP_VERSION already exists. Skipping tag creation."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$APP_VERSION"
            git push origin "$APP_VERSION"
            echo "‚úÖ Tag $APP_VERSION created and pushed."
          fi
        env:
          APP_VERSION: ${{ env.APP_VERSION }}
      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.APP_VERSION }}
          name: "Release ${{ env.APP_VERSION }}"
          body: |
            üóí **JetCV Moralis App**
            - Docker container avviato correttamente
            - Versione applicativa: `${{ env.APP_VERSION }}`
            - Autore: GitHub Actions bot

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
