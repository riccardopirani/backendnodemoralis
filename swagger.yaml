openapi: 3.0.0
info:
  title: JetCVNFT API
  version: 1.0.0
  description: API per interagire con JetCVNFT e Web3.Storage
servers:
  - url: http://localhost:3000
paths:
  /api/wallet/create:
    post:
      summary: Crea un nuovo wallet Ethereum
      responses:
        '200':
          description: Wallet creato

  /api/wallet/{address}/balance:
    get:
      summary: Ottieni saldo in MATIC
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Saldo restituito

  /api/token/{address}:
    get:
      summary: Ottieni token ERC20 (MATIC)
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista token

  /api/nft/{address}:
    get:
      summary: Leggi NFT per un address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista NFT

  /api/cv/mint:
    post:
      summary: Mint di un nuovo CV NFT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [address, uri]
              properties:
                address:
                  type: string
                uri:
                  type: string
      responses:
        '200':
          description: Mint completato

  /api/cv/{tokenId}/update:
    post:
      summary: Aggiorna l'URI di un NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [user, newURI]
              properties:
                user:
                  type: string
                newURI:
                  type: string
      responses:
        '200':
          description: URI aggiornato

  /api/user/{address}/hasJetCV:
    get:
      summary: Verifica se un utente ha un JetCV NFT
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Stato booleano

  /api/user/{address}/tokenId:
    get:
      summary: Ottieni il tokenId di un utente
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token ID

  /api/certifications/{tokenId}/{certIndex}:
    get:
      summary: Ottieni i dettagli di una certificazione
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
        - name: certIndex
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dettagli certificazione

  /api/token/{tokenId}/approved:
    get:
      summary: Ottieni l'indirizzo approvato per un token
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indirizzo approvato

  /api/token/{tokenId}/owner:
    get:
      summary: Ottieni il proprietario di un token
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Proprietario restituito

  /api/cv/{tokenId}/certification/propose:
    post:
      summary: Proponi una certificazione
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [user, certURI, legalEntity]
              properties:
                user:
                  type: string
                certURI:
                  type: string
                legalEntity:
                  type: string
      responses:
        '200':
          description: Certificazione proposta

  /api/cv/{tokenId}/certification/approve:
    post:
      summary: Approva una certificazione
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [certIndex]
              properties:
                certIndex:
                  type: integer
      responses:
        '200':
          description: Certificazione approvata

  /api/user/{address}/last-cert-approval:
    get:
      summary: Ultima approvazione certificazione
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Timestamp restituito

  /api/settings/minApprovalDelay:
    get:
      summary: Ottieni delay minimo approvazione
      responses:
        '200':
          description: Valore restituito

    post:
      summary: Imposta delay minimo approvazione
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [delay]
              properties:
                delay:
                  type: integer
      responses:
        '200':
          description: Delay impostato