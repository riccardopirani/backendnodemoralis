openapi: 3.0.0
info:
  title: JetCV API
  description: API per gestione utenti, wallet, NFT e operazioni blockchain
  version: 1.0.0
servers:
  - url: http://localhost:4000
    description: Local server
  - url: https://api.tuodominio.com
    description: Production server

tags:
  - name: Users
    description: Gestione degli utenti
  - name: Wallets
    description: Gestione dei wallet (Prisma ORM)
  - name: Home
    description: Operazioni wallet, NFT e blockchain

paths:
  /api/users:
    post:
      tags: [Users]
      summary: Crea un nuovo utente (Prisma ORM)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required: [name, email, password]
      responses:
        "201":
          description: Utente creato con successo
        "400":
          description: Campi mancanti
        "409":
          description: Email già esistente
    get:
      tags: [Users]
      summary: Ottieni tutti gli utenti con conteggio wallet
      responses:
        "200":
          description: Lista utenti con conteggio wallet
  /api/users/{id}:
    get:
      tags: [Users]
      summary: Ottieni utente per ID con wallet associati
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettagli utente con wallet
        "404":
          description: Utente non trovato
    put:
      tags: [Users]
      summary: Aggiorna utente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Utente aggiornato
        "404":
          description: Utente non trovato
        "409":
          description: Email già esistente
    delete:
      tags: [Users]
      summary: Elimina utente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Utente eliminato
        "404":
          description: Utente non trovato

  /api/wallet/create:
    post:
      tags: [Home]
      summary: Crea un nuovo wallet
      responses:
        "200":
          description: Wallet creato

  /api/wallet/{address}:
    get:
      tags: [Home]
      summary: Ottieni dettagli wallet
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dettagli wallet
        "404":
          description: Wallet non trovato

  /api/wallet/{address}/balance:
    get:
      tags: [Home]
      summary: Ottieni saldo wallet
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Saldo wallet
        "500":
          description: Errore interno

  /api/wallets:
    post:
      tags: [Wallets]
      summary: Crea un nuovo wallet (Prisma ORM)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                address:
                  type: string
                privateKey:
                  type: string
                mnemonic:
                  type: string
              required: [userId, address, privateKey]
      responses:
        "201":
          description: Wallet creato con successo
        "400":
          description: Campi mancanti
        "409":
          description: Indirizzo già esistente
        "404":
          description: Utente non trovato
    get:
      tags: [Wallets]
      summary: Ottieni tutti i wallet
      responses:
        "200":
          description: Lista wallet

  /api/wallets/{id}:
    get:
      tags: [Wallets]
      summary: Ottieni wallet per ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettagli wallet
        "404":
          description: Wallet non trovato
    put:
      tags: [Wallets]
      summary: Aggiorna wallet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                address:
                  type: string
                privateKey:
                  type: string
                mnemonic:
                  type: string
      responses:
        "200":
          description: Wallet aggiornato
        "404":
          description: Wallet non trovato
        "409":
          description: Indirizzo già esistente
    delete:
      tags: [Wallets]
      summary: Elimina wallet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Wallet eliminato
        "404":
          description: Wallet non trovato

  /api/wallets/user/{userId}:
    get:
      tags: [Wallets]
      summary: Ottieni wallet di un utente specifico
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lista wallet dell'utente
        "404":
          description: Utente non trovato

  /api/token/{address}:
    get:
      tags: [Home]
      summary: Ottieni token per address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Token trovato
        "500":
          description: Errore

  /api/nft/{address}:
    get:
      tags: [Home]
      summary: Lista NFT di un address
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista NFT
        "500":
          description: Errore interno

  /api/cv/mint:
    post:
      tags: [Home]
      summary: Mint NFT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                uri:
                  type: string
              required: [address, uri]
      responses:
        "200":
          description: NFT mintato
        "400":
          description: Parametri mancanti

  /api/cv/{tokenId}/update:
    post:
      tags: [Home]
      summary: Aggiorna NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                newURI:
                  type: string
      responses:
        "200":
          description: NFT aggiornato
        "400":
          description: Parametri mancanti

  /api/decrypt:
    post:
      tags: [Home]
      summary: Decripta un file IPFS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
              required: [url]
      responses:
        "200":
          description: File decriptato
        "400":
          description: Parametro mancante
        "500":
          description: Errore durante decrypt

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
