openapi: 3.0.0
info:
  title: JetCV API
  description: API per gestione utenti, wallet e funzionalità blockchain JetCV
  version: 1.0.0

servers:
  - url: http://localhost:4000/api

tags:
  - name: User
    description: API per la gestione degli utenti (Prisma)
  - name: Wallet
    description: API per la gestione dei wallet (Prisma)
  - name: Wallet Home
    description: API per funzionalità blockchain (mint, NFT, certificazioni)

paths:
  /users:
    post:
      tags: [User]
      summary: Crea un nuovo utente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name: { type: string }
                email: { type: string }
                password: { type: string }
      responses:
        201:
          description: Utente creato
    get:
      tags: [User]
      summary: Lista di tutti gli utenti
      responses:
        200:
          description: Successo

  /users/{id}:
    get:
      tags: [User]
      summary: Ottieni un utente con i suoi wallet
      parameters:
        - in: path
          name: id
          schema: { type: integer }
      responses:
        200: { description: Dettagli utente }
    put:
      tags: [User]
      summary: Aggiorna un utente
      parameters:
        - in: path
          name: id
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                email: { type: string }
                password: { type: string }
      responses:
        200: { description: Utente aggiornato }
    delete:
      tags: [User]
      summary: Elimina un utente
      parameters:
        - in: path
          name: id
          schema: { type: integer }
      responses:
        200: { description: Utente eliminato }

  /wallets:
    post:
      tags: [Wallet]
      summary: Crea un nuovo wallet per un utente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [userId, address, privateKey]
              properties:
                userId: { type: integer }
                address: { type: string }
                privateKey: { type: string }
                mnemonic: { type: string }
      responses:
        201:
          description: Wallet creato
    get:
      tags: [Wallet]
      summary: Lista di tutti i wallet
      responses:
        200: { description: Successo }

  /wallets/{id}:
    get:
      tags: [Wallet]
      summary: Ottieni un wallet
      parameters:
        - in: path
          name: id
          schema: { type: integer }
      responses:
        200: { description: Dettaglio wallet }
    put:
      tags: [Wallet]
      summary: Aggiorna wallet
      parameters:
        - in: path
          name: id
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address: { type: string }
                privateKey: { type: string }
                mnemonic: { type: string }
      responses:
        200: { description: Wallet aggiornato }
    delete:
      tags: [Wallet]
      summary: Elimina un wallet
      parameters:
        - in: path
          name: id
          schema: { type: integer }
      responses:
        200: { description: Wallet eliminato }

  /wallets/user/{userId}:
    get:
      tags: [Wallet]
      summary: Lista dei wallet di un utente
      parameters:
        - in: path
          name: userId
          schema: { type: integer }
      responses:
        200: { description: Successo }

  /wallet/create:
    post:
      tags: [Wallet Home]
      summary: Crea wallet blockchain
      responses:
        200: { description: Wallet creato }

  /wallet/{address}:
    get:
      tags: [Wallet Home]
      summary: Ottieni dati wallet blockchain
      parameters:
        - in: path
          name: address
          schema: { type: string }
      responses:
        200: { description: Dettaglio wallet }

  /wallet/{address}/balance:
    get:
      tags: [Wallet Home]
      summary: Ottieni saldo wallet
      parameters:
        - in: path
          name: address
          schema: { type: string }
      responses:
        200: { description: Saldo }

  /nft/{address}:
    get:
      tags: [Wallet Home]
      summary: Ottieni NFT posseduti da un indirizzo
      parameters:
        - in: path
          name: address
          schema: { type: string }
      responses:
        200: { description: Lista NFT }

  /cv/mint:
    post:
      tags: [Wallet Home]
      summary: Mint di un NFT CV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address, uri]
              properties:
                address: { type: string }
                uri: { type: string }
      responses:
        200: { description: Mint completato }

  /cv/{tokenId}/update:
    post:
      tags: [Wallet Home]
      summary: Aggiorna NFT CV
      parameters:
        - in: path
          name: tokenId
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user: { type: string }
                newURI: { type: string }
      responses:
        200: { description: NFT aggiornato }