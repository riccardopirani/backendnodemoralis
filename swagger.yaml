openapi: 3.0.0
info:
  title: JetCV API
  description: API per gestione utenti, wallet e funzionalit√† blockchain JetCV
  version: 3.1.0

servers:
  - url: http://localhost:4000/api
  - url: http://127.0.0.1:4000/api

tags:
  - name: Wallet
    description: API gestione wallet
  - name: Blockchain
    description: API blockchain (NFT, certificazioni)
  - name: Settings
    description: Impostazioni contratto

paths:
  /wallet/create:
    post:
      tags: [Wallet]
      summary: Crea un nuovo wallet
      responses:
        200:
          description: Wallet creato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'

  /wallet/{address}/balance:
    get:
      tags: [Wallet]
      summary: Ottieni il saldo di un wallet
      parameters:
        - name: address
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          description: Saldo del wallet

  /token/{address}:
    get:
      tags: [Wallet]
      summary: Ottieni il bilancio token MATIC
      parameters:
        - name: address
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          description: Lista token e saldo

  /cv/mint:
    post:
      tags: [Blockchain]
      summary: Mint NFT con userIdHash
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address, uri, userIdHash]
              properties:
                address: { type: string }
                uri: { type: string }
                userIdHash: { type: string }
      responses:
        200:
          description: NFT creato
        400:
          description: Parametri mancanti
        500:
          description: Errore interno

  /cv/{tokenId}:
    get:
      tags: [Blockchain]
      summary: Dettagli di un NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          description: Dettagli NFT
        404:
          description: Non trovato

  /cv/{tokenId}/update:
    post:
      tags: [Blockchain]
      summary: Aggiorna URI di un NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user, newURI]
              properties:
                user: { type: string }
                newURI: { type: string }
      responses:
        200:
          description: NFT aggiornato

  /cv/all-tokenIds:
    get:
      tags: [Blockchain]
      summary: Ottieni tutti i tokenId mintati
      responses:
        200:
          description: Lista di tokenId
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokenIds:
                    type: array
                    items: { type: string }

  /user/{address}/hasJetCV:
    get:
      tags: [Blockchain]
      summary: Verifica se l'utente ha JetCV
      parameters:
        - name: address
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          description: Boolean

  /user/{address}/hasCV:
    get:
      tags: [Blockchain]
      summary: Verifica se un utente ha un CV NFT
      parameters:
        - name: address
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          description: Boolean

  /user/{address}/tokenId:
    get:
      tags: [Blockchain]
      summary: Ottieni tokenId associato a un utente
      parameters:
        - name: address
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          description: Token ID

  /certifications/{address}:
    get:
      tags: [Blockchain]
      summary: Lista certificazioni di un utente
      parameters:
        - name: address
          in: path
          required: true
          schema: { type: string }
      responses:
        200:
          description: Lista certificazioni

  /cv/{tokenId}/certification/propose:
    post:
      tags: [Blockchain]
      summary: Proponi certificazione NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user, certURI, legalEntity]
              properties:
                user: { type: string }
                certURI: { type: string }
                legalEntity: { type: string }
      responses:
        200:
          description: Certificazione proposta

  /cv/{tokenId}/certification/approve:
    post:
      tags: [Blockchain]
      summary: Approva certificazione
      parameters:
        - name: tokenId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [certIndex]
              properties:
                certIndex: { type: integer }
      responses:
        200:
          description: Certificazione approvata

  /cv/{tokenId}/certification/reject:
    post:
      tags: [Blockchain]
      summary: Rifiuta certificazione di NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [certIndex, reason]
              properties:
                certIndex: { type: integer }
                reason: { type: string }
      responses:
        200:
          description: Certificazione rifiutata

  /settings/minApprovalDelay:
    get:
      tags: [Settings]
      summary: Ottieni delay minimo approvazione
      responses:
        200:
          description: Delay attuale
    post:
      tags: [Settings]
      summary: Imposta delay minimo approvazione
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delay: { type: integer }
      responses:
        200:
          description: Delay aggiornato

components:
  schemas:
    Wallet:
      type: object
      properties:
        address: { type: string }
        privateKey: { type: string }
        mnemonic: { type: string }