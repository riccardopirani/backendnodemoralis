openapi: 3.0.0
info:
  title: JetCVNFT API
  version: 1.0.0
  description: API per gestione wallet, NFT e certificazioni su JetCVNFT.

servers:
  - url: http://localhost:3000

paths:
  /api/decrypt:
    post:
      summary: Decripta un file da URL IPFS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: "https://example.com/file.enc"
      responses:
        "200":
          description: File decifrato restituito come allegato
        "400":
          description: Campo URL mancante
        "500":
          description: Errore server

  /api/wallet/create:
    post:
      summary: Crea un nuovo wallet
      responses:
        "200":
          description: Wallet creato

  /api/wallet/{address}/balance:
    get:
      summary: Ottieni saldo MATIC di un wallet
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Saldo restituito

  /api/token/{address}:
    get:
      summary: Restituisce il bilancio in token (es. MATIC)
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Token restituito

  /api/nft/{address}:
    get:
      summary: Legge NFT associati a un address
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista NFT

  /api/cv/mint:
    post:
      summary: Mint di un nuovo NFT JetCV
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address, uri]
              properties:
                address:
                  type: string
                uri:
                  type: string
      responses:
        "200":
          description: Mint avvenuto con successo

  /api/cv/{tokenId}/update:
    post:
      summary: Aggiorna URI di un NFT esistente
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [user, newURI]
              properties:
                user:
                  type: string
                newURI:
                  type: string
      responses:
        "200":
          description: URI aggiornato

  /api/user/{address}/hasJetCV:
    get:
      summary: Verifica se un utente ha un JetCV
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Stato dell'utente

  /api/user/{address}/tokenId:
    get:
      summary: Ottiene il tokenId dell’utente
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: TokenId restituito

  /api/certifications/{tokenId}/{certIndex}:
    get:
      summary: Ottiene una certificazione specifica
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
        - in: path
          name: certIndex
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dettagli certificazione

  /api/token/{tokenId}/approved:
    get:
      summary: Ottiene l’approvato per un token
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Address approvato

  /api/token/{tokenId}/owner:
    get:
      summary: Ottiene il proprietario di un token
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Owner del token

  /api/cv/{tokenId}/certification/propose:
    post:
      summary: Proponi una certificazione
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [user, certURI, legalEntity]
              properties:
                user:
                  type: string
                certURI:
                  type: string
                legalEntity:
                  type: string
      responses:
        "200":
          description: Certificazione proposta

  /api/cv/{tokenId}/certification/approve:
    post:
      summary: Approva una certificazione
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [certIndex]
              properties:
                certIndex:
                  type: integer
      responses:
        "200":
          description: Certificazione approvata

  /api/settings/minApprovalDelay:
    post:
      summary: Imposta il delay minimo per l’approvazione
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: [delay]
              properties:
                delay:
                  type: integer
      responses:
        "200":
          description: Delay aggiornato
    get:
      summary: Ottiene il delay minimo di approvazione
      responses:
        "200":
          description: Delay restituito

  /api/user/{address}/hasCV:
    get:
      summary: Verifica se un utente ha un CV
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Stato dell’utente

  /api/certifications/{address}:
    get:
      summary: Ottiene tutte le certificazioni associate a un utente
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Elenco certificazioni

  /api/user/{address}/last-cert-approval:
    get:
      summary: Ultima approvazione certificazione per utente
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Timestamp ultima approvazione

  /api/cv/{tokenId}:
    get:
      summary: Ottieni dettagli completi del CV NFT
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dettagli NFT