openapi: 3.0.3
info:
  title: JetCVNFT API
  version: 1.0.0
  description: API per gestione wallet, NFT e certificazioni

servers:
  - url: http://localhost:3000

paths:
  /api/wallet/create:
    post:
      summary: Crea un nuovo wallet e salva il segreto
      responses:
        200:
          description: Wallet creato
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  message:
                    type: string
                  output:
                    type: string
        500:
          description: Errore nella creazione del wallet

  /api/wallet/{address}:
    get:
      summary: Recupera informazioni di un wallet salvato
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Dettagli wallet
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  encryptedPrivateKey:
                    type: string
                  mnemonic:
                    type: string
        404:
          description: Wallet non trovato

  /api/token/{address}:
    get:
      summary: Recupera il saldo MATIC di un wallet
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Saldo token
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    token:
                      type: string
                    balance:
                      type: string
        500:
          description: Errore nel recupero saldo

  /api/nft/{address}:
    get:
      summary: Recupera NFT di un utente
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Lista NFT
          content:
            application/json:
              schema:
                type: object
                properties:
                  nfts:
                    type: array
                    items:
                      type: object
                      properties:
                        tokenId:
                          type: string
                        uri:
                          type: string

  /api/wallet/{address}/:
    get:
      summary: Recupera informazioni di un wallet salvato in Keycloak
      description: |
        Questo endpoint utilizza lo script bash `decode_token.sh` per leggere i dati del wallet
        (encryptedPrivateKey e mnemonic) memorizzati come attributi in Keycloak.
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Dati wallet recuperati da Keycloak
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    example: "0x9BFDb073906812f708A0F5b27774187B53a0D50A"
                  encryptedPrivateKey:
                    type: string
                    example: "0xfe50ab5b33f0c3f94f1cf1845fca44909a831a566fbd4e575e4181f174012d66"
                  mnemonic:
                    type: string
                    example: "fragile such process trend example prevent place canoe rookie swallow blue hawk"
        404:
          description: Wallet non trovato in Keycloak
        500:
          description: Errore durante la lettura del segreto

  /api/cv/mint:
    post:
      summary: Mint di un NFT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address, uri]
              properties:
                address:
                  type: string
                uri:
                  type: string
      responses:
        200:
          description: Mint completato
        400:
          description: Campi mancanti
        500:
          description: Errore nel mint

  /api/cv/{tokenId}/update:
    post:
      summary: Aggiorna URI di un NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user, newURI]
              properties:
                user:
                  type: string
                newURI:
                  type: string
      responses:
        200:
          description: NFT aggiornato
        500:
          description: Errore aggiornamento NFT

  /api/user/{address}/hasJetCV:
    get:
      summary: Verifica se un utente ha gi√† un JetCV
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Stato JetCV
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  hasJetCV:
                    type: boolean

  /api/user/{address}/tokenId:
    get:
      summary: Recupera tokenId di un utente
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: TokenId
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                  tokenId:
                    type: string

  /api/certifications/{tokenId}/{certIndex}:
    get:
      summary: Recupera una certificazione specifica
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
        - name: certIndex
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Dettagli certificazione
          content:
            application/json:
              schema:
                type: object
                properties:
                  certURI:
                    type: string
                  issuer:
                    type: string
                  legalEntity:
                    type: string
                  approved:
                    type: boolean
                  timestamp:
                    type: string

  /api/cv/{tokenId}/certification/propose:
    post:
      summary: Proponi una certificazione
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user, certURI, legalEntity]
              properties:
                user:
                  type: string
                certURI:
                  type: string
                legalEntity:
                  type: string
      responses:
        200:
          description: Certificazione proposta
        500:
          description: Errore

  /api/cv/{tokenId}/certification/approve:
    post:
      summary: Approva una certificazione
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [certIndex]
              properties:
                certIndex:
                  type: integer
      responses:
        200:
          description: Certificazione approvata
        500:
          description: Errore

  /api/settings/minApprovalDelay:
    get:
      summary: Recupera il delay minimo per approvazioni
      responses:
        200:
          description: Delay recuperato
        500:
          description: Errore
    post:
      summary: Imposta il delay minimo per approvazioni
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [delay]
              properties:
                delay:
                  type: integer
      responses:
        200:
          description: Delay aggiornato
        500:
          description: Errore

  /api/cv/{tokenId}:
    get:
      summary: Dettagli NFT
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Dettagli NFT
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokenId:
                    type: string
                  owner:
                    type: string
                  uri:
                    type: string
                  certifications:
                    type: array
                    items:
                      type: object
        500:
          description: Errore
